name: Deploy Spring Boot to EC2

on:
  push:
    branches: ["main","temp/test-workflow"]   # temp/test-workflow 브랜치에 푸시될 때 실행
  workflow_dispatch:  # GitHub UI에서 'Run workflow' 버튼을 눌러 수동으로 실행할 수 있도록 설정

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout source code
        uses: actions/checkout@v3

      - name: 2. yml 파일 세팅
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application-dev.yml

      - name: 3. EC2에 프로젝트 전체 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}  # EC2 퍼블릭 IP를 GitHub Secrets에서 불러옴
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "."  # 전체 프로젝트 디렉토리 전송
          target: "/home/ubuntu/app"

      - name: 4. EC2에서 docker-compose 실행
        uses: appleboy/ssh-action@master  # SSH를 사용하여 EC2에서 명령 실행
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}  # EC2 퍼블릭 IP
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # docker-compose 명령어 실행
            cd /home/ubuntu/app/docker
            docker-compose down
            docker-compose up --build -d

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'ap-northeast-2'
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      S3_OBJECT_KEY: ${{ secrets.S3_OBJECT_KEY }}
