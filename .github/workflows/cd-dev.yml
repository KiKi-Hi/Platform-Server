# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle


name: 키키하이 CD 파이프라인

on:

  workflow_run:
    workflows: ["키키하이 dev CI 파이프라인"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'develop' }}
    runs-on: ubuntu-22.04

    steps:
      - name: 1. Checkout source code
        uses: actions/checkout@v3

      - name: env 생성
        run: echo "${{ secrets.ENV }}" > .env

      - name: 2. .env 파일 EC2에 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ".env"  # 방금 생성한 .env 파일
          target: "/home/ubuntu/app/docker/"



      - name: 3. docker-compose.yml 전달
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "./docker/docker-compose.yml"
          target: "/home/ubuntu/app/"

      - name: 3. EC2에서 docker-compose 실행
        uses: appleboy/ssh-action@master  # SSH를 사용하여 EC2에서 명령 실행
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}  # EC2 퍼블릭 IP
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # docker-compose 명령어 실행
            cd /home/ubuntu/app/docker/
            docker compose pull spring
            docker compose up -d spring

