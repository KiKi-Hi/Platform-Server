# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: 키키하이 CI 파이프라인

on:
  push:
    branches: [ "main" ]

jobs:
  #1. 개발 서버 CI, Build 용
  CI:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      checks: write
      pull-requests: write

    steps:
      # 1. repository checkout
      - uses: actions/checkout@v4

      # 2. jdk 환경 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. '*.yml' 파일 세팅
      - name: application.yml 파일 설정
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml
          
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROD_YML }}" > ./src/main/resources/application-prod.yml
          
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_OAUTH2_YML }}" > ./src/main/resources/application-oauth2.yml
          
          mkdir -p src/test/resources
          echo "${{ secrets.TEST_APPLICATION_YML }}" > ./src/test/resources/application.yml

      # 4. gradle 환경 설치
      - name: Gradle Wrapper 권한 부여
        run: chmod +x gradlew

      # 4-1. 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      - name: Gradle 빌드
        run: ./gradlew clean build

      #7. 도커 허브 로그인
      - name: Docker 로그인
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_ACCESS_TOKEN}}

      #8. 도커 이미지 Push
      - name: Docker 이미지 Push
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/server:latest
